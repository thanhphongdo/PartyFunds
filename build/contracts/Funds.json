{
  "contractName": "Funds",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getTestCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFundHost",
      "outputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "money",
              "type": "uint256"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "creator",
              "type": "address"
            },
            {
              "name": "members",
              "type": "address[]"
            },
            {
              "name": "money",
              "type": "uint256"
            },
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "date",
              "type": "string"
            },
            {
              "name": "paySuccess",
              "type": "bool"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "party",
          "type": "tuple"
        }
      ],
      "name": "addParty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemberList",
      "outputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "money",
              "type": "uint256"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPartyList",
      "outputs": [
        {
          "components": [
            {
              "name": "creator",
              "type": "address"
            },
            {
              "name": "members",
              "type": "address[]"
            },
            {
              "name": "money",
              "type": "uint256"
            },
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "date",
              "type": "string"
            },
            {
              "name": "paySuccess",
              "type": "bool"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTotalFund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "address"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "money",
              "type": "uint256"
            },
            {
              "name": "isValue",
              "type": "bool"
            }
          ],
          "name": "member",
          "type": "tuple"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setBaseFundAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "setTestCount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setTestCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTestCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFundHost\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"isValue\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"creator\",\"type\":\"address\"},{\"name\":\"members\",\"type\":\"address[]\"},{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"string\"},{\"name\":\"paySuccess\",\"type\":\"bool\"},{\"name\":\"isValue\",\"type\":\"bool\"}],\"name\":\"party\",\"type\":\"tuple\"}],\"name\":\"addParty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMemberList\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"isValue\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPartyList\",\"outputs\":[{\"components\":[{\"name\":\"creator\",\"type\":\"address\"},{\"name\":\"members\",\"type\":\"address[]\"},{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"string\"},{\"name\":\"paySuccess\",\"type\":\"bool\"},{\"name\":\"isValue\",\"type\":\"bool\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setBaseFundAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"money\",\"type\":\"uint256\"},{\"name\":\"isValue\",\"type\":\"bool\"}],\"name\":\"member\",\"type\":\"tuple\"}],\"name\":\"addMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/Funds.sol\":\"Funds\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/BaseFunds.sol\":{\"keccak256\":\"0xaac239d598bd99f8cf6b32784036ca99ca108ac7de2c740bb43fdd3fe81d8c58\",\"urls\":[\"bzzr://86a0a15d90330dc48b8c52a99a08ca175bfa556de9754db293295e980109dc90\"]},\"/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/Funds.sol\":{\"keccak256\":\"0xa4bc189b1b9d11c80eb341c335250d2d9285fc165efe6770b3d408d25d9ea8fb\",\"urls\":[\"bzzr://187601bb74e174277c73fa4d49a8ef7e20c696b34b4ecd9b634c7c67f6529411\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060015560006002556000600355600060045534801561002457600080fd5b5033600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061177a806100756000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80635f5d5f00116100665780635f5d5f001461010b578063879f58261461012957806396d02049146101475780639fd813e314610163578063ea4fbaf61461018157610092565b80620a6444146100975780630853ad8a146100b357806318895842146100d15780633c0e6b15146100ef575b600080fd5b6100b160048036036100ac919081019061110a565b61019d565b005b6100bb61022c565b6040516100c89190611506565b60405180910390f35b6100d9610236565b6040516100e691906114e4565b60405180910390f35b610109600480360361010491908101906110c9565b61036d565b005b61011361059c565b60405161012091906114a0565b60405180910390f35b610131610718565b60405161013e91906114c2565b60405180910390f35b610161600480360361015c919081019061105f565b6109df565b005b61016b610a64565b6040516101789190611506565b60405180910390f35b61019b60048036036101969190810190611088565b610a6e565b005b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620a6444826040518263ffffffff1660e01b81526004016101f79190611506565b600060405180830381600087803b15801561021157600080fd5b505af1158015610225573d6000803e3d6000fd5b5050505050565b6000600454905090565b61023e610c13565b60076040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905090565b600c819080600181540180825580915050906001820390600052602060002090600602016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906103fe929190610c53565b50604082015181600201556060820151816003019080519060200190610425929190610cdd565b506080820151816004019080519060200190610442929190610cdd565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff0219169083151502179055505050508060066000600354815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906104ff929190610c53565b50604082015181600201556060820151816003019080519060200190610526929190610cdd565b506080820151816004019080519060200190610543929190610cdd565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555090505060036000815480929190600101919050555050565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561070f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050815260200190600101906105c0565b50505050905090565b6060600c805480602002602001604051908101604052809291908181526020016000905b828210156109d657838290600052602060002090600602016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561083a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107f0575b5050505050815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108e65780601f106108bb576101008083540402835291602001916108e6565b820191906000526020600020905b8154815290600101906020018083116108c957829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109885780601f1061095d57610100808354040283529160200191610988565b820191906000526020600020905b81548152906001019060200180831161096b57829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff1615151515815250508152602001906001019061073c565b50505050905090565b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600154905090565b600b819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610aff929190610cdd565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610bd0929190610cdd565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505060026000815480929190600101919050555050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b828054828255906000526020600020908101928215610ccc579160200282015b82811115610ccb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c73565b5b509050610cd99190610d5d565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d1e57805160ff1916838001178555610d4c565b82800160010185558215610d4c579182015b82811115610d4b578251825591602001919060010190610d30565b5b509050610d599190610da0565b5090565b610d9d91905b80821115610d9957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610d63565b5090565b90565b610dc291905b80821115610dbe576000816000905550600101610da6565b5090565b90565b600081359050610dd4816116fb565b92915050565b600082601f830112610deb57600080fd5b8135610dfe610df98261154e565b611521565b91508181835260208401935060208101905083856020840282011115610e2357600080fd5b60005b83811015610e535781610e398882610dc5565b845260208401935060208301925050600181019050610e26565b5050505092915050565b600081359050610e6c81611712565b92915050565b600082601f830112610e8357600080fd5b8135610e96610e9182611576565b611521565b91508082526020830160208301858383011115610eb257600080fd5b610ebd8382846116a8565b50505092915050565b600060808284031215610ed857600080fd5b610ee26080611521565b90506000610ef284828501610dc5565b600083015250602082013567ffffffffffffffff811115610f1257600080fd5b610f1e84828501610e72565b6020830152506040610f328482850161104a565b6040830152506060610f4684828501610e5d565b60608301525092915050565b600060e08284031215610f6457600080fd5b610f6e60e0611521565b90506000610f7e84828501610dc5565b600083015250602082013567ffffffffffffffff811115610f9e57600080fd5b610faa84828501610dda565b6020830152506040610fbe8482850161104a565b604083015250606082013567ffffffffffffffff811115610fde57600080fd5b610fea84828501610e72565b606083015250608082013567ffffffffffffffff81111561100a57600080fd5b61101684828501610e72565b60808301525060a061102a84828501610e5d565b60a08301525060c061103e84828501610e5d565b60c08301525092915050565b60008135905061105981611729565b92915050565b60006020828403121561107157600080fd5b600061107f84828501610dc5565b91505092915050565b60006020828403121561109a57600080fd5b600082013567ffffffffffffffff8111156110b457600080fd5b6110c084828501610ec6565b91505092915050565b6000602082840312156110db57600080fd5b600082013567ffffffffffffffff8111156110f557600080fd5b61110184828501610f52565b91505092915050565b60006020828403121561111c57600080fd5b600061112a8482850161104a565b91505092915050565b600061113f8383611173565b60208301905092915050565b60006111578383611375565b905092915050565b600061116b83836113d8565b905092915050565b61117c81611660565b82525050565b600061118d826115c9565b611197818561161c565b93506111a2836115a2565b8060005b838110156111d35781516111ba8882611133565b97506111c5836115f5565b9250506001810190506111a6565b5085935050505092915050565b60006111eb826115d4565b6111f5818561162d565b935083602082028501611207856115af565b8060005b858110156112435784840389528151611224858261114b565b945061122f83611602565b925060208a0199505060018101905061120b565b50829750879550505050505092915050565b6000611260826115df565b61126a818561163e565b93508360208202850161127c856115bc565b8060005b858110156112b85784840389528151611299858261115f565b94506112a48361160f565b925060208a01995050600181019050611280565b50829750879550505050505092915050565b6112d381611672565b82525050565b60006112e4826115ea565b6112ee818561164f565b93506112fe8185602086016116b7565b611307816116ea565b840191505092915050565b600060808301600083015161132a6000860182611173565b506020830151848203602086015261134282826112d9565b91505060408301516113576040860182611482565b50606083015161136a60608601826112ca565b508091505092915050565b600060808301600083015161138d6000860182611173565b50602083015184820360208601526113a582826112d9565b91505060408301516113ba6040860182611482565b5060608301516113cd60608601826112ca565b508091505092915050565b600060e0830160008301516113f06000860182611173565b50602083015184820360208601526114088282611182565b915050604083015161141d6040860182611482565b506060830151848203606086015261143582826112d9565b9150506080830151848203608086015261144f82826112d9565b91505060a083015161146460a08601826112ca565b5060c083015161147760c08601826112ca565b508091505092915050565b61148b8161169e565b82525050565b61149a8161169e565b82525050565b600060208201905081810360008301526114ba81846111e0565b905092915050565b600060208201905081810360008301526114dc8184611255565b905092915050565b600060208201905081810360008301526114fe8184611312565b905092915050565b600060208201905061151b6000830184611491565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561154457600080fd5b8060405250919050565b600067ffffffffffffffff82111561156557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561158d57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061166b8261167e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156116d55780820151818401526020810190506116ba565b838111156116e4576000848401525b50505050565b6000601f19601f8301169050919050565b61170481611660565b811461170f57600080fd5b50565b61171b81611672565b811461172657600080fd5b50565b6117328161169e565b811461173d57600080fd5b5056fea265627a7a723058205ffd8a434fef6a7e737758779e8a2bd2985cc4b667f16c85eddd419838ebe7546c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100925760003560e01c80635f5d5f00116100665780635f5d5f001461010b578063879f58261461012957806396d02049146101475780639fd813e314610163578063ea4fbaf61461018157610092565b80620a6444146100975780630853ad8a146100b357806318895842146100d15780633c0e6b15146100ef575b600080fd5b6100b160048036036100ac919081019061110a565b61019d565b005b6100bb61022c565b6040516100c89190611506565b60405180910390f35b6100d9610236565b6040516100e691906114e4565b60405180910390f35b610109600480360361010491908101906110c9565b61036d565b005b61011361059c565b60405161012091906114a0565b60405180910390f35b610131610718565b60405161013e91906114c2565b60405180910390f35b610161600480360361015c919081019061105f565b6109df565b005b61016b610a64565b6040516101789190611506565b60405180910390f35b61019b60048036036101969190810190611088565b610a6e565b005b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16620a6444826040518263ffffffff1660e01b81526004016101f79190611506565b600060405180830381600087803b15801561021157600080fd5b505af1158015610225573d6000803e3d6000fd5b5050505050565b6000600454905090565b61023e610c13565b60076040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905090565b600c819080600181540180825580915050906001820390600052602060002090600602016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906103fe929190610c53565b50604082015181600201556060820151816003019080519060200190610425929190610cdd565b506080820151816004019080519060200190610442929190610cdd565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff0219169083151502179055505050508060066000600354815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906104ff929190610c53565b50604082015181600201556060820151816003019080519060200190610526929190610cdd565b506080820151816004019080519060200190610543929190610cdd565b5060a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555090505060036000815480929190600101919050555050565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561070f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d25780601f106106a7576101008083540402835291602001916106d2565b820191906000526020600020905b8154815290600101906020018083116106b557829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050815260200190600101906105c0565b50505050905090565b6060600c805480602002602001604051908101604052809291908181526020016000905b828210156109d657838290600052602060002090600602016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561083a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107f0575b5050505050815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108e65780601f106108bb576101008083540402835291602001916108e6565b820191906000526020600020905b8154815290600101906020018083116108c957829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109885780601f1061095d57610100808354040283529160200191610988565b820191906000526020600020905b81548152906001019060200180831161096b57829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff1615151515815250508152602001906001019061073c565b50505050905090565b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600154905090565b600b819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610aff929190610cdd565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610bd0929190610cdd565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555090505060026000815480929190600101919050555050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b828054828255906000526020600020908101928215610ccc579160200282015b82811115610ccb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c73565b5b509050610cd99190610d5d565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d1e57805160ff1916838001178555610d4c565b82800160010185558215610d4c579182015b82811115610d4b578251825591602001919060010190610d30565b5b509050610d599190610da0565b5090565b610d9d91905b80821115610d9957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610d63565b5090565b90565b610dc291905b80821115610dbe576000816000905550600101610da6565b5090565b90565b600081359050610dd4816116fb565b92915050565b600082601f830112610deb57600080fd5b8135610dfe610df98261154e565b611521565b91508181835260208401935060208101905083856020840282011115610e2357600080fd5b60005b83811015610e535781610e398882610dc5565b845260208401935060208301925050600181019050610e26565b5050505092915050565b600081359050610e6c81611712565b92915050565b600082601f830112610e8357600080fd5b8135610e96610e9182611576565b611521565b91508082526020830160208301858383011115610eb257600080fd5b610ebd8382846116a8565b50505092915050565b600060808284031215610ed857600080fd5b610ee26080611521565b90506000610ef284828501610dc5565b600083015250602082013567ffffffffffffffff811115610f1257600080fd5b610f1e84828501610e72565b6020830152506040610f328482850161104a565b6040830152506060610f4684828501610e5d565b60608301525092915050565b600060e08284031215610f6457600080fd5b610f6e60e0611521565b90506000610f7e84828501610dc5565b600083015250602082013567ffffffffffffffff811115610f9e57600080fd5b610faa84828501610dda565b6020830152506040610fbe8482850161104a565b604083015250606082013567ffffffffffffffff811115610fde57600080fd5b610fea84828501610e72565b606083015250608082013567ffffffffffffffff81111561100a57600080fd5b61101684828501610e72565b60808301525060a061102a84828501610e5d565b60a08301525060c061103e84828501610e5d565b60c08301525092915050565b60008135905061105981611729565b92915050565b60006020828403121561107157600080fd5b600061107f84828501610dc5565b91505092915050565b60006020828403121561109a57600080fd5b600082013567ffffffffffffffff8111156110b457600080fd5b6110c084828501610ec6565b91505092915050565b6000602082840312156110db57600080fd5b600082013567ffffffffffffffff8111156110f557600080fd5b61110184828501610f52565b91505092915050565b60006020828403121561111c57600080fd5b600061112a8482850161104a565b91505092915050565b600061113f8383611173565b60208301905092915050565b60006111578383611375565b905092915050565b600061116b83836113d8565b905092915050565b61117c81611660565b82525050565b600061118d826115c9565b611197818561161c565b93506111a2836115a2565b8060005b838110156111d35781516111ba8882611133565b97506111c5836115f5565b9250506001810190506111a6565b5085935050505092915050565b60006111eb826115d4565b6111f5818561162d565b935083602082028501611207856115af565b8060005b858110156112435784840389528151611224858261114b565b945061122f83611602565b925060208a0199505060018101905061120b565b50829750879550505050505092915050565b6000611260826115df565b61126a818561163e565b93508360208202850161127c856115bc565b8060005b858110156112b85784840389528151611299858261115f565b94506112a48361160f565b925060208a01995050600181019050611280565b50829750879550505050505092915050565b6112d381611672565b82525050565b60006112e4826115ea565b6112ee818561164f565b93506112fe8185602086016116b7565b611307816116ea565b840191505092915050565b600060808301600083015161132a6000860182611173565b506020830151848203602086015261134282826112d9565b91505060408301516113576040860182611482565b50606083015161136a60608601826112ca565b508091505092915050565b600060808301600083015161138d6000860182611173565b50602083015184820360208601526113a582826112d9565b91505060408301516113ba6040860182611482565b5060608301516113cd60608601826112ca565b508091505092915050565b600060e0830160008301516113f06000860182611173565b50602083015184820360208601526114088282611182565b915050604083015161141d6040860182611482565b506060830151848203606086015261143582826112d9565b9150506080830151848203608086015261144f82826112d9565b91505060a083015161146460a08601826112ca565b5060c083015161147760c08601826112ca565b508091505092915050565b61148b8161169e565b82525050565b61149a8161169e565b82525050565b600060208201905081810360008301526114ba81846111e0565b905092915050565b600060208201905081810360008301526114dc8184611255565b905092915050565b600060208201905081810360008301526114fe8184611312565b905092915050565b600060208201905061151b6000830184611491565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561154457600080fd5b8060405250919050565b600067ffffffffffffffff82111561156557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561158d57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061166b8261167e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156116d55780820151818401526020810190506116ba565b838111156116e4576000848401525b50505050565b6000601f19601f8301169050919050565b61170481611660565b811461170f57600080fd5b50565b61171b81611672565b811461172657600080fd5b50565b6117328161169e565b811461173d57600080fd5b5056fea265627a7a723058205ffd8a434fef6a7e737758779e8a2bd2985cc4b667f16c85eddd419838ebe7546c6578706572696d656e74616cf50037",
  "sourceMap": "96:4233:1:-;;;136:1:0;115:22;;163:1;144:20;;189:1;171:19;;214:1;197:18;;1914:111:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;1914:111:1;1953:10;1945:5;;:18;;;;;;;;;;;;;;;;;;96:4233;;;;;;",
  "deployedSourceMap": "96:4233:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;96:4233:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2171:85;;;;;;;;;;;;;;;;:::i;:::-;;1089:86:0;;;:::i;:::-;;;;;;;;;;;;;;;;783:93;;;:::i;:::-;;;;;;;;;;;;;;;;1339:145;;;;;;;;;;;;;;;;:::i;:::-;;882:99;;;:::i;:::-;;;;;;;;;;;;;;;;987:96;;;:::i;:::-;;;;;;;;;;;;;;;;2033:126:1;;;;;;;;;;;;;;;;:::i;:::-;;687:90:0;;;:::i;:::-;;;;;;;;;;;;;;;;1181:152;;;;;;;;;;;;;;;;:::i;:::-;;2171:85:1;2221:9;;;;;;;;;;;:22;;;2244:3;2221:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2221:27:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2221:27:1;;;;2171:85;:::o;1089:86:0:-;1134:4;1158:9;;1151:16;;1089:86;:::o;783:93::-;827:13;;:::i;:::-;860:8;853:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:93;:::o;1339:145::-;1394:9;1409:5;1394:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1394:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:5;1426:7;:19;1434:10;;1426:19;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:10;;:12;;;;;;;;;;;;;1339:145;:::o;882:99::-;928:15;963:10;956:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:99;:::oo;2033:126:1:-;2109:4;2093:13;;:20;;;;;;;;;;;;;;;;;;2146:4;2124:9;;:27;;;;;;;;;;;;;;;;;;2033:126;:::o;687:90:0:-;732:7;759:10;;752:17;;687:90;:::o;1181:152::-;1239:10;1255:6;1239:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1239:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:6;1273:7;:19;1281:10;1273:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:11;;:13;;;;;;;;;;;;;1181:152;:::o;96:4233:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;160:699;;273:3;266:4;258:6;254:17;250:27;240:2;;291:1;288;281:12;240:2;328:6;315:20;350:76;365:60;418:6;365:60;;;350:76;;;341:85;;443:5;468:6;461:5;454:21;498:4;490:6;486:17;476:27;;520:4;515:3;511:14;504:21;;573:6;620:3;612:4;604:6;600:17;595:3;591:27;588:36;585:2;;;637:1;634;627:12;585:2;662:1;647:206;672:6;669:1;666:13;647:206;;;730:3;752:37;785:3;773:10;752:37;;;747:3;740:50;813:4;808:3;804:14;797:21;;841:4;836:3;832:14;825:21;;704:149;694:1;691;687:9;682:14;;647:206;;;651:14;233:626;;;;;;;;867:124;;944:6;931:20;922:29;;956:30;980:5;956:30;;;916:75;;;;;999:434;;1097:3;1090:4;1082:6;1078:17;1074:27;1064:2;;1115:1;1112;1105:12;1064:2;1152:6;1139:20;1174:61;1189:45;1227:6;1189:45;;;1174:61;;;1165:70;;1255:6;1248:5;1241:21;1291:4;1283:6;1279:17;1324:4;1317:5;1313:16;1359:3;1350:6;1345:3;1341:16;1338:25;1335:2;;;1376:1;1373;1366:12;1335:2;1386:41;1420:6;1415:3;1410;1386:41;;;1057:376;;;;;;;;1471:842;;1582:4;1570:9;1565:3;1561:19;1557:30;1554:2;;;1600:1;1597;1590:12;1554:2;1618:20;1633:4;1618:20;;;1609:29;;1686:1;1717:49;1762:3;1753:6;1742:9;1738:22;1717:49;;;1711:3;1704:5;1700:15;1693:74;1648:130;1856:2;1845:9;1841:18;1828:32;1880:18;1872:6;1869:30;1866:2;;;1912:1;1909;1902:12;1866:2;1947:55;1998:3;1989:6;1978:9;1974:22;1947:55;;;1940:4;1933:5;1929:16;1922:81;1788:226;2065:2;2098:49;2143:3;2134:6;2123:9;2119:22;2098:49;;;2091:4;2084:5;2080:16;2073:75;2024:135;2212:2;2245:46;2287:3;2278:6;2267:9;2263:22;2245:46;;;2238:4;2231:5;2227:16;2220:72;2169:134;1548:765;;;;;2349:1489;;2459:4;2447:9;2442:3;2438:19;2434:30;2431:2;;;2477:1;2474;2467:12;2431:2;2495:20;2510:4;2495:20;;;2486:29;;2568:1;2599:49;2644:3;2635:6;2624:9;2620:22;2599:49;;;2593:3;2586:5;2582:15;2575:74;2525:135;2741:2;2730:9;2726:18;2713:32;2765:18;2757:6;2754:30;2751:2;;;2797:1;2794;2787:12;2751:2;2832:70;2898:3;2889:6;2878:9;2874:22;2832:70;;;2825:4;2818:5;2814:16;2807:96;2670:244;2965:2;2998:49;3043:3;3034:6;3023:9;3019:22;2998:49;;;2991:4;2984:5;2980:16;2973:75;2924:135;3140:2;3129:9;3125:18;3112:32;3164:18;3156:6;3153:30;3150:2;;;3196:1;3193;3186:12;3150:2;3231:55;3282:3;3273:6;3262:9;3258:22;3231:55;;;3224:4;3217:5;3213:16;3206:81;3069:229;3376:3;3365:9;3361:19;3348:33;3401:18;3393:6;3390:30;3387:2;;;3433:1;3430;3423:12;3387:2;3468:55;3519:3;3510:6;3499:9;3495:22;3468:55;;;3461:4;3454:5;3450:16;3443:81;3308:227;3591:3;3625:46;3667:3;3658:6;3647:9;3643:22;3625:46;;;3618:4;3611:5;3607:16;3600:72;3545:138;3736:3;3770:46;3812:3;3803:6;3792:9;3788:22;3770:46;;;3763:4;3756:5;3752:16;3745:72;3693:135;2425:1413;;;;;3845:130;;3925:6;3912:20;3903:29;;3937:33;3964:5;3937:33;;;3897:78;;;;;3982:241;;4086:2;4074:9;4065:7;4061:23;4057:32;4054:2;;;4102:1;4099;4092:12;4054:2;4137:1;4154:53;4199:7;4190:6;4179:9;4175:22;4154:53;;;4144:63;;4116:97;4048:175;;;;;4230:371;;4356:2;4344:9;4335:7;4331:23;4327:32;4324:2;;;4372:1;4369;4362:12;4324:2;4435:1;4424:9;4420:17;4407:31;4458:18;4450:6;4447:30;4444:2;;;4490:1;4487;4480:12;4444:2;4510:75;4577:7;4568:6;4557:9;4553:22;4510:75;;;4500:85;;4386:205;4318:283;;;;;4608:369;;4733:2;4721:9;4712:7;4708:23;4704:32;4701:2;;;4749:1;4746;4739:12;4701:2;4812:1;4801:9;4797:17;4784:31;4835:18;4827:6;4824:30;4821:2;;;4867:1;4864;4857:12;4821:2;4887:74;4953:7;4944:6;4933:9;4929:22;4887:74;;;4877:84;;4763:204;4695:282;;;;;4984:241;;5088:2;5076:9;5067:7;5063:23;5059:32;5056:2;;;5104:1;5101;5094:12;5056:2;5139:1;5156:53;5201:7;5192:6;5181:9;5177:22;5156:53;;;5146:63;;5118:97;5050:175;;;;;5233:173;;5320:46;5362:3;5354:6;5320:46;;;5395:4;5390:3;5386:14;5372:28;;5313:93;;;;;5415:229;;5552:86;5634:3;5626:6;5552:86;;;5538:100;;5531:113;;;;;5653:225;;5788:84;5868:3;5860:6;5788:84;;;5774:98;;5767:111;;;;;5886:103;5959:24;5977:5;5959:24;;;5954:3;5947:37;5941:48;;;6027:654;;6158:50;6202:5;6158:50;;;6221:76;6290:6;6285:3;6221:76;;;6214:83;;6318:52;6364:5;6318:52;;;6390:7;6418:1;6403:256;6428:6;6425:1;6422:13;6403:256;;;6495:6;6489:13;6516:63;6575:3;6560:13;6516:63;;;6509:70;;6596:56;6645:6;6596:56;;;6586:66;;6460:199;6450:1;6447;6443:9;6438:14;;6403:256;;;6407:14;6672:3;6665:10;;6137:544;;;;;;;;6752:992;;6933:72;6999:5;6933:72;;;7018:104;7115:6;7110:3;7018:104;;;7011:111;;7145:3;7187:4;7179:6;7175:17;7170:3;7166:27;7214:74;7282:5;7214:74;;;7308:7;7336:1;7321:384;7346:6;7343:1;7340:13;7321:384;;;7408:9;7402:4;7398:20;7393:3;7386:33;7453:6;7447:13;7475:100;7570:4;7555:13;7475:100;;;7467:108;;7592:78;7663:6;7592:78;;;7582:88;;7693:4;7688:3;7684:14;7677:21;;7378:327;7368:1;7365;7361:9;7356:14;;7321:384;;;7325:14;7718:4;7711:11;;7735:3;7728:10;;6912:832;;;;;;;;;;7813:984;;7992:71;8057:5;7992:71;;;8076:103;8172:6;8167:3;8076:103;;;8069:110;;8202:3;8244:4;8236:6;8232:17;8227:3;8223:27;8271:73;8338:5;8271:73;;;8364:7;8392:1;8377:381;8402:6;8399:1;8396:13;8377:381;;;8464:9;8458:4;8454:20;8449:3;8442:33;8509:6;8503:13;8531:98;8624:4;8609:13;8531:98;;;8523:106;;8646:77;8716:6;8646:77;;;8636:87;;8746:4;8741:3;8737:14;8730:21;;8434:324;8424:1;8421;8417:9;8412:14;;8377:381;;;8381:14;8771:4;8764:11;;8788:3;8781:10;;7971:826;;;;;;;;;;8805:94;8872:21;8887:5;8872:21;;;8867:3;8860:34;8854:45;;;8906:319;;9004:35;9033:5;9004:35;;;9051:61;9105:6;9100:3;9051:61;;;9044:68;;9117:52;9162:6;9157:3;9150:4;9143:5;9139:16;9117:52;;;9190:29;9212:6;9190:29;;;9185:3;9181:39;9174:46;;8984:241;;;;;;9289:863;;9434:4;9429:3;9425:14;9515:3;9508:5;9504:15;9498:22;9526:62;9583:3;9578;9574:13;9560:12;9526:62;;;9454:140;9667:4;9660:5;9656:16;9650:23;9719:3;9713:4;9709:14;9702:4;9697:3;9693:14;9686:38;9739:69;9803:4;9789:12;9739:69;;;9731:77;;9604:216;9894:4;9887:5;9883:16;9877:23;9906:63;9963:4;9958:3;9954:14;9940:12;9906:63;;;9830:145;10051:4;10044:5;10040:16;10034:23;10063:57;10114:4;10109:3;10105:14;10091:12;10063:57;;;9985:141;10143:4;10136:11;;9407:745;;;;;;10216:849;;10347:4;10342:3;10338:14;10428:3;10421:5;10417:15;10411:22;10439:62;10496:3;10491;10487:13;10473:12;10439:62;;;10367:140;10580:4;10573:5;10569:16;10563:23;10632:3;10626:4;10622:14;10615:4;10610:3;10606:14;10599:38;10652:69;10716:4;10702:12;10652:69;;;10644:77;;10517:216;10807:4;10800:5;10796:16;10790:23;10819:63;10876:4;10871:3;10867:14;10853:12;10819:63;;;10743:145;10964:4;10957:5;10953:16;10947:23;10976:57;11027:4;11022:3;11018:14;11004:12;10976:57;;;10898:141;11056:4;11049:11;;10320:745;;;;;;11127:1494;;11256:4;11251:3;11247:14;11342:3;11335:5;11331:15;11325:22;11353:62;11410:3;11405;11401:13;11387:12;11353:62;;;11276:145;11497:4;11490:5;11486:16;11480:23;11549:3;11543:4;11539:14;11532:4;11527:3;11523:14;11516:38;11569:99;11663:4;11649:12;11569:99;;;11561:107;;11431:249;11754:4;11747:5;11743:16;11737:23;11766:63;11823:4;11818:3;11814:14;11800:12;11766:63;;;11690:145;11911:4;11904:5;11900:16;11894:23;11963:3;11957:4;11953:14;11946:4;11941:3;11937:14;11930:38;11983:69;12047:4;12033:12;11983:69;;;11975:77;;11845:219;12137:4;12130:5;12126:16;12120:23;12189:3;12183:4;12179:14;12172:4;12167:3;12163:14;12156:38;12209:69;12273:4;12259:12;12209:69;;;12201:77;;12074:216;12369:4;12362:5;12358:16;12352:23;12381:57;12432:4;12427:3;12423:14;12409:12;12381:57;;;12300:144;12520:4;12513:5;12509:16;12503:23;12532:57;12583:4;12578:3;12574:14;12560:12;12532:57;;;12454:141;12612:4;12605:11;;11229:1392;;;;;;12628:103;12701:24;12719:5;12701:24;;;12696:3;12689:37;12683:48;;;12738:113;12821:24;12839:5;12821:24;;;12816:3;12809:37;12803:48;;;12858:433;;13062:2;13051:9;13047:18;13039:26;;13112:9;13106:4;13102:20;13098:1;13087:9;13083:17;13076:47;13137:144;13276:4;13267:6;13137:144;;;13129:152;;13033:258;;;;;13298:429;;13500:2;13489:9;13485:18;13477:26;;13550:9;13544:4;13540:20;13536:1;13525:9;13521:17;13514:47;13575:142;13712:4;13703:6;13575:142;;;13567:150;;13471:256;;;;;13734:349;;13896:2;13885:9;13881:18;13873:26;;13946:9;13940:4;13936:20;13932:1;13921:9;13917:17;13910:47;13971:102;14068:4;14059:6;13971:102;;;13963:110;;13867:216;;;;;14090:213;;14208:2;14197:9;14193:18;14185:26;;14222:71;14290:1;14279:9;14275:17;14266:6;14222:71;;;14179:124;;;;;14310:256;;14372:2;14366:9;14356:19;;14410:4;14402:6;14398:17;14509:6;14497:10;14494:22;14473:18;14461:10;14458:34;14455:62;14452:2;;;14530:1;14527;14520:12;14452:2;14550:10;14546:2;14539:22;14350:216;;;;;14573:254;;14728:18;14720:6;14717:30;14714:2;;;14760:1;14757;14750:12;14714:2;14789:4;14781:6;14777:17;14769:25;;14817:4;14811;14807:15;14799:23;;14651:176;;;;14834:255;;14974:18;14966:6;14963:30;14960:2;;;15006:1;15003;14996:12;14960:2;15050:4;15046:9;15039:4;15031:6;15027:17;15023:33;15015:41;;15079:4;15073;15069:15;15061:23;;14897:192;;;;15099:119;;15205:4;15197:6;15193:17;15182:28;;15173:45;;;;15231:141;;15359:4;15351:6;15347:17;15336:28;;15327:45;;;;15385:140;;15512:4;15504:6;15500:17;15489:28;;15480:45;;;;15535:103;;15627:5;15621:12;15611:22;;15605:33;;;;15645:125;;15759:5;15753:12;15743:22;;15737:33;;;;15777:124;;15890:5;15884:12;15874:22;;15868:33;;;;15908:88;;15985:5;15979:12;15969:22;;15963:33;;;;16005:120;;16113:4;16105:6;16101:17;16090:28;;16082:43;;;;16136:142;;16266:4;16258:6;16254:17;16243:28;;16235:43;;;;16289:141;;16418:4;16410:6;16406:17;16395:28;;16387:43;;;;16440:168;;16560:6;16555:3;16548:19;16597:4;16592:3;16588:14;16573:29;;16541:67;;;;;16617:196;;16765:6;16760:3;16753:19;16802:4;16797:3;16793:14;16778:29;;16746:67;;;;;16822:195;;16969:6;16964:3;16957:19;17006:4;17001:3;16997:14;16982:29;;16950:67;;;;;17026:153;;17131:6;17126:3;17119:19;17168:4;17163:3;17159:14;17144:29;;17112:67;;;;;17187:91;;17249:24;17267:5;17249:24;;;17238:35;;17232:46;;;;17285:85;;17358:5;17351:13;17344:21;17333:32;;17327:43;;;;17377:121;;17450:42;17443:5;17439:54;17428:65;;17422:76;;;;17505:72;;17567:5;17556:16;;17550:27;;;;17585:145;17666:6;17661:3;17656;17643:30;17722:1;17713:6;17708:3;17704:16;17697:27;17636:94;;;;17739:268;17804:1;17811:101;17825:6;17822:1;17819:13;17811:101;;;17901:1;17896:3;17892:11;17886:18;17882:1;17877:3;17873:11;17866:39;17847:2;17844:1;17840:10;17835:15;;17811:101;;;17927:6;17924:1;17921:13;17918:2;;;17992:1;17983:6;17978:3;17974:16;17967:27;17918:2;17788:219;;;;;18015:97;;18103:2;18099:7;18094:2;18087:5;18083:14;18079:28;18069:38;;18063:49;;;;18120:117;18189:24;18207:5;18189:24;;;18182:5;18179:35;18169:2;;18228:1;18225;18218:12;18169:2;18163:74;;18244:111;18310:21;18325:5;18310:21;;;18303:5;18300:32;18290:2;;18346:1;18343;18336:12;18290:2;18284:71;;18362:117;18431:24;18449:5;18431:24;;;18424:5;18421:35;18411:2;;18470:1;18467;18460:12;18411:2;18405:74;",
  "source": "pragma solidity >=0.4.22 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\nimport \"./BaseFunds.sol\";\r\ncontract Funds is BaseFunds {\r\n    address owner;\r\n    address baseFundsAdrr;\r\n    BaseFunds baseFunds;\r\n    // uint256 totalFunds = 0;\r\n    // uint countParty = 0;\r\n    // struct Member{\r\n    //     address id;\r\n    //     string name;\r\n    //     uint256 money;\r\n    // }\r\n    // struct Party{\r\n    //     address creator;\r\n    //     address[] members;\r\n    //     uint256 money;\r\n    //     string message;\r\n    //     string date;\r\n    //     bool paySuccess;\r\n    // }\r\n    // mapping(address=>Member) members;\r\n    // Member fundHost;\r\n    // Member[] memberList;\r\n    // Party[] partyList;\r\n    modifier onlyOwner() { // Modifier\r\n        require(\r\n            msg.sender == owner,\r\n            \"Only Owner can call this.\"\r\n        );\r\n        _;\r\n    }\r\n    // modifier onlyMember() { // Modifier\r\n    //     require(\r\n    //         msg.sender != owner,\r\n    //         \"Only Owner can call this.\"\r\n    //     );\r\n    //     _;\r\n    // }\r\n    // modifier memberExists(address member) { // Modifier\r\n    //     bool checkExists = false;\r\n    //     for(uint i = 0; i < memberList.length; i++) {\r\n    //         if (memberList[i].id == member) {\r\n    //             checkExists = true;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     require(\r\n    //         checkExists,\r\n    //         \"Member not exists\"\r\n    //     );\r\n    //     _;\r\n    // }\r\n    // modifier memberNotExists(address member) { // Modifier\r\n    //     bool checkExists = false;\r\n    //     for(uint i = 0; i < memberList.length; i++) {\r\n    //         if (memberList[i].id == member) {\r\n    //             checkExists = true;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     require(\r\n    //         !checkExists,\r\n    //         \"Member is exists\"\r\n    //     );\r\n    //     _;\r\n    // }\r\n    constructor() public{\r\n        owner = msg.sender;\r\n        // fundHost = Member(msg.sender, \"HOST\", 0);\r\n    }\r\n\r\n    function setBaseFundAddress(address addr) public {\r\n        baseFundsAdrr = addr;\r\n        baseFunds = BaseFunds(addr);\r\n    }\r\n    \r\n    function setTestCount(uint val) public {\r\n        baseFunds.setTestCount(val);\r\n    }\r\n\r\n\r\n    // function getFundHost() public view returns (Member memory) {\r\n    //     return fundHost;\r\n    // }\r\n    // function getMemberList() public view returns (Member[] memory) {\r\n    //     return memberList;\r\n    // }\r\n    // function getPartyList() public view returns (Party[] memory) {\r\n    //     return partyList;\r\n    // }\r\n    // function test(uint256 val) public{\r\n    //     totalFunds = val;\r\n    // }\r\n    // function newMember(string memory _name) public payable memberNotExists(msg.sender){\r\n    //     Member memory member = Member(msg.sender, _name, 0);\r\n    //     members[msg.sender] = member;\r\n    //     memberList.push(member);\r\n    // }\r\n    // function newMember2(string memory _name) public memberNotExists(msg.sender){\r\n    //     Member memory member = Member(msg.sender, _name, 0);\r\n    //     members[msg.sender] = member;\r\n    //     memberList.push(member);\r\n    // }\r\n    // function payIn(address _member, uint256 _money) public onlyOwner memberExists(_member) {\r\n    //     members[_member].money += _money;\r\n    //     fundHost.money += _money;\r\n    // }\r\n    // function transferMoney(address _member, uint256 _money) public onlyOwner memberExists(_member) {\r\n    //     members[msg.sender].money -= _money;\r\n    //     members[_member].money += _money;\r\n    // }\r\n    // function createParty(address[] memory _members, uint256  _money, string memory  _message, string memory  _date) public{\r\n    //     partyList.push(Party(msg.sender, _members, _money, _message, _date, false));\r\n    //     countParty++;\r\n    // }\r\n    // function payForParty(uint index) public onlyOwner{\r\n    //     if(index >= countParty) return;\r\n    //     Party memory party = partyList[index];\r\n    //     if(!party.paySuccess){\r\n    //         party.paySuccess = true;\r\n    //         uint _money = party.money / party.members.length;\r\n    //         for(uint i = 0; i< party.members.length; i++){\r\n    //             members[party.members[i]].money -= _money;\r\n    //         }\r\n    //         fundHost.money -= party.money;\r\n    //     }\r\n    // }\r\n}",
  "sourcePath": "C:/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/Funds.sol",
  "ast": {
    "absolutePath": "/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/Funds.sol",
    "exportedSymbols": {
      "Funds": [
        215
      ]
    },
    "id": 216,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 155,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "id": 156,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:1"
      },
      {
        "absolutePath": "/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/BaseFunds.sol",
        "file": "./BaseFunds.sol",
        "id": 157,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 154,
        "src": "69:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 158,
              "name": "BaseFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
              "src": "114:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseFunds_$153",
                "typeString": "contract BaseFunds"
              }
            },
            "id": 159,
            "nodeType": "InheritanceSpecifier",
            "src": "114:9:1"
          }
        ],
        "contractDependencies": [
          153
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215,
          153
        ],
        "name": "Funds",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 161,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "131:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 160,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "name": "baseFundsAdrr",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "151:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 162,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 165,
            "name": "baseFunds",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "179:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseFunds_$153",
              "typeString": "contract BaseFunds"
            },
            "typeName": {
              "contractScope": null,
              "id": 164,
              "name": "BaseFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
              "src": "179:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseFunds_$153",
                "typeString": "contract BaseFunds"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "720:137:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "765:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "765:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "779:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "765:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204f776e65722063616e2063616c6c20746869732e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d01232056cf2dc90cf271feebbb2ffd66ea65574da92ce59d26edf23183f8e9",
                          "typeString": "literal_string \"Only Owner can call this.\""
                        },
                        "value": "Only Owner can call this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d01232056cf2dc90cf271feebbb2ffd66ea65574da92ce59d26edf23183f8e9",
                          "typeString": "literal_string \"Only Owner can call this.\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        290,
                        291
                      ],
                      "referencedDeclaration": 291,
                      "src": "743:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:94:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "743:94:1"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "848:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:2:1"
            },
            "src": "699:158:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "1934:91:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1945:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1953:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1953:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1945:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 186,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1925:2:1"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:0:1"
            },
            "scope": 215,
            "src": "1914:111:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2082:77:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "baseFundsAdrr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2093:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "2109:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2093:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "baseFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2124:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseFunds_$153",
                        "typeString": "contract BaseFunds"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "2146:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 196,
                        "name": "BaseFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2136:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseFunds_$153_$",
                          "typeString": "type(contract BaseFunds)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2136:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseFunds_$153",
                        "typeString": "contract BaseFunds"
                      }
                    },
                    "src": "2124:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseFunds_$153",
                      "typeString": "contract BaseFunds"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:27:1"
                }
              ]
            },
            "documentation": null,
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseFundAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2061:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2060:14:1"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2082:0:1"
            },
            "scope": 215,
            "src": "2033:126:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2210:46:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2244:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "baseFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2221:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseFunds_$153",
                          "typeString": "contract BaseFunds"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTestCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
                      "src": "2221:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:27:1"
                }
              ]
            },
            "documentation": null,
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTestCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "name": "val",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2193:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2192:10:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2210:0:1"
            },
            "scope": 215,
            "src": "2171:85:1",
            "stateMutability": "nonpayable",
            "superFunction": 152,
            "visibility": "public"
          }
        ],
        "scope": 216,
        "src": "96:4233:1"
      }
    ],
    "src": "0:4329:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/Funds.sol",
    "exportedSymbols": {
      "Funds": [
        215
      ]
    },
    "id": 216,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 155,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "id": 156,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:1"
      },
      {
        "absolutePath": "/C/Users/phongdt/Documents/projects/Test/PartyFunds/contracts/BaseFunds.sol",
        "file": "./BaseFunds.sol",
        "id": 157,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 154,
        "src": "69:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 158,
              "name": "BaseFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
              "src": "114:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseFunds_$153",
                "typeString": "contract BaseFunds"
              }
            },
            "id": 159,
            "nodeType": "InheritanceSpecifier",
            "src": "114:9:1"
          }
        ],
        "contractDependencies": [
          153
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215,
          153
        ],
        "name": "Funds",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 161,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "131:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 160,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 163,
            "name": "baseFundsAdrr",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "151:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 162,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 165,
            "name": "baseFunds",
            "nodeType": "VariableDeclaration",
            "scope": 215,
            "src": "179:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseFunds_$153",
              "typeString": "contract BaseFunds"
            },
            "typeName": {
              "contractScope": null,
              "id": 164,
              "name": "BaseFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 153,
              "src": "179:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseFunds_$153",
                "typeString": "contract BaseFunds"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "720:137:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "765:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "765:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "779:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "765:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79204f776e65722063616e2063616c6c20746869732e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d01232056cf2dc90cf271feebbb2ffd66ea65574da92ce59d26edf23183f8e9",
                          "typeString": "literal_string \"Only Owner can call this.\""
                        },
                        "value": "Only Owner can call this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d01232056cf2dc90cf271feebbb2ffd66ea65574da92ce59d26edf23183f8e9",
                          "typeString": "literal_string \"Only Owner can call this.\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        290,
                        291
                      ],
                      "referencedDeclaration": 291,
                      "src": "743:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:94:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "743:94:1"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "848:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:2:1"
            },
            "src": "699:158:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "1934:91:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1945:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1953:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1953:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1945:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 186,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1925:2:1"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:0:1"
            },
            "scope": 215,
            "src": "1914:111:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2082:77:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "baseFundsAdrr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "2093:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "2109:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2093:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "baseFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2124:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseFunds_$153",
                        "typeString": "contract BaseFunds"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "2146:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 196,
                        "name": "BaseFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2136:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseFunds_$153_$",
                          "typeString": "type(contract BaseFunds)"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2136:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseFunds_$153",
                        "typeString": "contract BaseFunds"
                      }
                    },
                    "src": "2124:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseFunds_$153",
                      "typeString": "contract BaseFunds"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:27:1"
                }
              ]
            },
            "documentation": null,
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseFundAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2061:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2060:14:1"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2082:0:1"
            },
            "scope": 215,
            "src": "2033:126:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2210:46:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2244:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "baseFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2221:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseFunds_$153",
                          "typeString": "contract BaseFunds"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTestCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
                      "src": "2221:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:27:1"
                }
              ]
            },
            "documentation": null,
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTestCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "name": "val",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2193:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2192:10:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2210:0:1"
            },
            "scope": 215,
            "src": "2171:85:1",
            "stateMutability": "nonpayable",
            "superFunction": 152,
            "visibility": "public"
          }
        ],
        "scope": 216,
        "src": "96:4233:1"
      }
    ],
    "src": "0:4329:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xf284876512d0FE4dE2b1DA4b077c4978e2c3AB90",
      "transactionHash": "0xb326e4a7c3ef1d33bb38c96da3f0b861ce5f60b51aed99cf4317a895218a9570"
    },
    "1573616934523": {
      "events": {},
      "links": {},
      "address": "0xa94834A4c08B1C39fCFf3A6b76875598F95a4Bbd",
      "transactionHash": "0x5c561b05bd0b73d82582ef2eb6c694a355d108b78fb245b67e1dea55912644a7"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-13T04:25:54.281Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}